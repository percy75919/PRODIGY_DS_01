# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings

# Ignore warnings for clean output
warnings.filterwarnings("ignore")

# Load dataset
df = pd.read_csv("worldpopulationdata.csv")

# Display basic dataset information
print("First 5 rows of the dataset:")
print(df.head(5), "\n")
print("Last 5 rows of the dataset:")
print(df.tail(5), "\n")
print("Column Names:")
print(df.columns, "\n")
df.info()
print("\nDataset Statistics:")
print(df.describe(), "\n")

# Check for duplicates and missing values
print("Number of duplicate rows:", df.duplicated().sum())
print("Number of missing values per column:\n", df.isna().sum(), "\n")

# Display unique country names and codes
print("Unique Country Names:")
print(df['Country Name'].unique())
print("\nTotal number of unique countries:", df['Country Name'].nunique())
print("Unique Country Codes:")
print(df['Country Code'].unique())
print("\nTotal number of unique country codes:", df['Country Code'].nunique(), "\n")

# Drop unnecessary columns
df.drop(['Series Name', 'Country Name'], axis=1, inplace=True)

# Filter for total population data
total_population_data = df[df['Series Code'] == 'SP.POP.TOTL']

# Sort by total population for 2022 and display top/bottom 10 countries
total_population_sorted = total_population_data.sort_values(by="2022", ascending=False)
total_top_ten_countries = total_population_sorted.head(10)
total_bottom_ten_countries = total_population_sorted.tail(10)
print("Top 10 countries by total population (2022):")
print(total_top_ten_countries[['Country Code']], "\n")
print("Bottom 10 countries by total population (2022):")
print(total_bottom_ten_countries[['Country Code']], "\n")

# Plot top 10 countries' total population for 2022 and 2016
def plot_population(data, year, title, pos):
    plt.subplot(2, 2, pos)
    sns.barplot(x=year, y="Country Code", data=data, palette="coolwarm")
    plt.title(f"Top 10 Countries by Population ({year})", fontsize=10)
    plt.xlabel("Total Population", fontsize=10)
    plt.ylabel("Country", fontsize=10)
plt.figure(figsize=(15, 6))
plot_population(total_top_ten_countries, "2022", "Top Ten Countries (2022)", 1)
plot_population(total_top_ten_countries, "2016", "Top Ten Countries (2016)", 2)
plt.tight_layout()
plt.show()

# Plot bottom 10 countries' total population for 2022 and 2016
plt.figure(figsize=(15, 6))
plot_population(total_bottom_ten_countries, "2022", "Bottom Ten Countries (2022)", 1)
plot_population(total_bottom_ten_countries, "2016", "Bottom Ten Countries (2016)", 2)
plt.tight_layout()
plt.show()


# Filter and sort data for male and female populations
male_population_data = df[df['Series Code'] == 'SP.POP.TOTL.MA.IN']
female_population_data = df[df['Series Code'] == 'SP.POP.TOTL.FE.IN']
male_top_ten_countries = male_population_data.sort_values(by="2022", ascending=False).head(10)
female_top_ten_countries = female_population_data.sort_values(by="2022", ascending=False).head(10)
print("Top 10 countries by male population (2022):")
print(male_top_ten_countries[['Country Code']], "\n")
print("Top 10 countries by female population (2022):")
print(female_top_ten_countries[['Country Code']], "\n")

# Plot male and female populations for 2022
def plot_gender_population(data, title, gender, color, pos):
    plt.subplot(2, 2, pos)
    sns.barplot(x="2022", y="Country Code", data=data, palette=color)
    plt.title(f"Top 10 Countries by {gender} Population (2022)", fontsize=10)
    plt.xlabel(f"{gender} Population", fontsize=10)
    plt.ylabel("Country", fontsize=10)
plt.figure(figsize=(15, 6))
plot_gender_population(male_top_ten_countries, "Male", "Male", "viridis", 1)
plot_gender_population(female_top_ten_countries, "Female", "Female", "viridis", 2)
plt.tight_layout()
plt.show()

# Merge male and female population data
merged_data = pd.merge(male_population_data, female_population_data, on="Country Code", suffixes=("_male", "_female"))
merged_data['Total Population'] = merged_data["2022_male"] + merged_data["2022_female"]

# Sort by total population and select top/bottom 10 countries
sorted_data = merged_data.sort_values(by="Total Population", ascending=False)
top_10_countries = sorted_data.head(10)
bottom_10_countries = sorted_data.tail(10)

# Plot stacked bar plots for top 10 countries
def plot_stacked_bar(data, title):
    plt.figure(figsize=(12, 6))
    sns.barplot(x="Country Code", y="2022_female", data=data, color="red", label="Female Population")
    sns.barplot(x="Country Code", y="2022_male", data=data, bottom=data["2022_female"], color="green", label="Male Population")
    plt.title(title, fontsize=10)
    plt.xlabel("Country", fontsize=10)
    plt.ylabel("Population", fontsize=10)
    plt.legend()
    plt.xticks(rotation=45, ha="right")
    plt.tight_layout()
    plt.show()
plot_stacked_bar(top_10_countries, "Top 10 Countries by Total Population (2022)")
plot_stacked_bar(bottom_10_countries, "Bottom 10 Countries by Total Population (2022)")
